#!/bin/sh /etc/rc.common

. "/lib/functions/network.sh"

USE_PROCD=1
START=99

CONF="clash"
CONF_DIR="/etc/clash"
BUILD_CONF_SCRIPT="/usr/lib/clash/build_conf.lua"
DNSMASQ_RULE_FILE="/tmp/dnsmasq.d/clash.conf"

CREATE_RULE_SCRIPT="/usr/lib/clash/create_rules.sh"
CLEAR_RULE_SCRIPT="/usr/lib/clash/clear_rules.sh"

config_load "$CONF"

msg() {
	logger -p daemon.info -st "$CONF[$$]" "$*"
}

restart_other_service() {
	local service=$1
	/etc/init.d/$service restart >/dev/null 2>&1
}

start_clash() {
	local conffile="$CONF_DIR/config.yaml"
	local prog
	local api_port
	local api_host

	config_get prog "global" "prog" "/usr/bin/clash"
	config_get api_host "global" "api_host" "0.0.0.0"
	config_get api_port "global" "api_port" "9090"

	$BUILD_CONF_SCRIPT

	procd_open_instance
	procd_set_param command "$prog"
	[ -d "$CONF_DIR" ] || mkdir "$CONF_DIR"
	chown -R "$user" "$CONF_DIR" 2>/dev/null
	procd_append_param command -d "$CONF_DIR"
	procd_set_param file "$conffile"
	procd_set_param stdout 1
	procd_set_param stderr 1
	procd_set_param respawn

	procd_close_instance
}

enable_rules() {
	$CREATE_RULE_SCRIPT
}

disable_rules() {
	$CLEAR_RULE_SCRIPT
}

create_dnsmasq_rules() {
	local dns_host="$1"
	local dns_port="$2"
	echo "strict-order" >$DNSMASQ_RULE_FILE
	echo "server=$dns_host#$dns_port" >>$DNSMASQ_RULE_FILE
	restart_other_service "dnsmasq"
}

clear_dnsmasq_rules() {
	rm -f $DNSMASQ_RULE_FILE
	restart_other_service "dnsmasq"
}

start_service() {
	local enabled
	local dns_host dns_port
	local tproxy_enabled tporxy_mark

	config_get_bool enabled "global" "enabled" 0
	config_get_bool tproxy_enabled "global" "tproxy_enabled" 1
	config_get dns_host "global" "dns_host" "127.0.0.1"
	config_get dns_port "global" "dns_port" "5353"

	disable_rules

	if [ "$enabled" -eq 0 ]; then
		msg "Instance is disabled"
		return 0
	fi

	start_clash

	if [ "$tproxy_enabled" -eq 1 ]; then
		msg "transparent proxy is enabled, applying firewall and dnsmasq rules"
		enable_rules
		create_dnsmasq_rules "$dns_host" "$dns_port"
	fi

	msg "clash instance is started"
}

stop_service() {
	msg "remove firewall and dnsmasq rules"
	disable_rules
	clear_dnsmasq_rules
	msg "clash instance closed"
}

reload_service() {
	stop
	start
}

service_triggers() {
	local iface trigger_delay
	config_get trigger_delay "global" "trigger_delay" "10"
	PROCD_RELOAD_DELAY=$((trigger_delay * 1000))
	network_find_wan iface
	if [ -n "$iface" ]; then
		procd_add_interface_trigger "interface.*" $iface "/etc/init.d/clash" "restart"
	fi
	procd_add_reload_trigger "$CONF"
}
